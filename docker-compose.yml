services:
  vote:
    build: 
      context: ./vote
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - REDIS_HOST=redis
    healthcheck: 
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 10s
    ports:
      - "5000:80"

  redis:
    image: redis:alpine
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: "5s"

  worker:
    build:
      context: ./worker
      # dockerfile: dockerfile-multistage
    environment:
      - REDIS_HOST=redis
      - POSTGRES_HOST=db
    depends_on:
      redis:
        condition: service_healthy 
      db:
        condition: service_healthy 

  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    volumes:
      - "db-data:/var/lib/postgresql/data"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  result:
    build:
      context: ./result
      args:
        - port=80
    environment:
      - POSTGRES_HOST=db
    depends_on:
      db:
        condition: service_healthy 
    ports:
      - "5001:80"

volumes:
  db-data: